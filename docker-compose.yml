version: '3.8'

services:
  # Development environment
  api-tests-dev:
    build:
      context: .
      target: development
    container_name: api-tests-dev
    environment:
      - ENVIRONMENT=development
      - API_TIMEOUT=30
      - PYTEST_RETRY_COUNT=2
      - PARALLEL_WORKERS=4
    volumes:
      - .:/app
      - test-reports:/app/reports
    command: >
      bash -c "
        echo 'Starting development environment...' &&
        pytest tests/end_to_end/ -m smoke -v --html=reports/dev-report.html --self-contained-html
      "
    networks:
      - testing-network

  # Smoke testing
  smoke-tests:
    build:
      context: .
      target: production
    container_name: smoke-tests
    environment:
      - ENVIRONMENT=staging
      - API_TIMEOUT=15
      - PYTEST_RETRY_COUNT=3
    volumes:
      - test-reports:/app/reports
    command: >
      bash -c "
        echo 'Running smoke tests...' &&
        pytest tests/end_to_end/ -m smoke --html=reports/smoke-report.html --self-contained-html --junitxml=reports/smoke-junit.xml -v
      "
    networks:
      - testing-network

  # Integration testing
  integration-tests:
    build:
      context: .
      target: production
    container_name: integration-tests
    environment:
      - ENVIRONMENT=development
      - API_TIMEOUT=30
      - PARALLEL_WORKERS=6
    volumes:
      - test-reports:/app/reports
    command: >
      bash -c "
        echo 'Running integration tests...' &&
        pytest tests/end_to_end/ --html=reports/integration-report.html --self-contained-html --junitxml=reports/integration-junit.xml -n 6 -v
      "
    networks:
      - testing-network

  # Performance testing
  performance-tests:
    build:
      context: .
      target: performance
    container_name: performance-tests
    environment:
      - ENVIRONMENT=development
      - PERFORMANCE_DURATION=30
      - MAX_RPS=50
    volumes:
      - test-reports:/app/reports
    command: >
      bash -c "
        echo 'Running performance tests...' &&
        python tests/performance/test_breaking_point.py
      "
    networks:
      - testing-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G

  # Test report server
  report-server:
    image: nginx:alpine
    container_name: test-reports-server
    ports:
      - "8080:80"
    volumes:
      - test-reports:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - smoke-tests
      - integration-tests
    networks:
      - testing-network

  # Monitoring and metrics
  test-monitor:
    image: prom/prometheus:latest
    container_name: test-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - testing-network

volumes:
  test-reports:
    driver: local

networks:
  testing-network:
    driver: bridge
